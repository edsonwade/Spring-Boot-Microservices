version: '3.8'

volumes:
  department-db-data:
  employee-db-data:

services:
  department-service:
    image: department-service:latest
    build:
      context: ./department-service
    ports:
      - "8082:8082"
    environment:
      POSTGRES_USERNAME: your_postgres_username
      POSTGRES_PASSWORD: your_postgres_password
      EUREKA_URI: http://eureka-service:8761/eureka
    depends_on:
      - eureka-service
    networks:
      - app-network
    volumes:
      - department-db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:8082/actuator/health | grep '\"status\":\"UP\"'"]
      interval: 10s
      timeout: 5s
      retries: 3
  department-service-2:
    image: department-service:latest
    build:
      context: ./department-service
    ports:
      - "8083:8082"  # Second instance running on port 8083
    environment:
      POSTGRES_USERNAME: your_postgres_username
      POSTGRES_PASSWORD: your_postgres_password
      EUREKA_URI: http://eureka-service:8761/eureka
    depends_on:
      - eureka-service
    networks:
      - app-network
    volumes:
      - department-db-data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "wget -qO- http://localhost:8082/actuator/health | grep '\"status\":\"UP\"'" ]
      interval: 10s
      timeout: 5s
      retries: 3

  employee-service:
    image: employee-service:latest
    build:
      context: ./employee-service
    ports:
      - "8081:8081"
    environment:
      POSTGRES_USERNAME: your_postgres_username
      POSTGRES_PASSWORD: your_postgres_password
      EUREKA_URI: http://eureka-service:8761/eureka
    depends_on:
      - eureka-service
    networks:
      - app-network
    volumes:
      - employee-db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:8081/actuator/health | grep '\"status\":\"UP\"'"]
      interval: 10s
      timeout: 5s
      retries: 3
  employee-service-1:
    image: employee-service:latest
    build:
      context: ./employee-service
    ports:
      - "8084:8081"  # Third instance running on port 8084
    environment:
      POSTGRES_USERNAME: your_postgres_username
      POSTGRES_PASSWORD: your_postgres_password
      EUREKA_URI: http://eureka-service:8761/eureka
    depends_on:
      - eureka-service
    networks:
      - app-network
    volumes:
      - employee-db-data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "wget -qO- http://localhost:8081/actuator/health | grep '\"status\":\"UP\"'" ]
      interval: 10s
      timeout: 5s
      retries: 3
  gateway-service:
    image: gateway-service:latest
    build:
      context: ./gateway-service
    ports:
      - "9191:9191"
    environment:
      EUREKA_URI: http://eureka-service:8761/eureka
    depends_on:
      - eureka-service
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:9191/actuator/health | grep '\"status\":\"UP\"'"]
      interval: 10s
      timeout: 5s
      retries: 3

  eureka-service:
    image: eureka-service:latest
    build:
      context: ./eureka-service
    ports:
      - "8761:8761"
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:8761/actuator/health | grep '\"status\":\"UP\"'"]
      interval: 10s
      timeout: 5s
      retries: 3

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus:/etc/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    networks:
      - app-network

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    networks:
      - app-network


networks:
  app-network: